@model TaskManagementMvc.Models.Invoice
@{
    ViewData["Title"] = "جزئیات صورتحساب";
    var emailLogs = ViewData["EmailLogs"] as List<TaskManagementMvc.Models.InvoiceEmailLog> ?? new();
    var totalAmount = Model.Lines.Sum(l => l.Amount);
    var grouped = Model.Lines
        .GroupBy(l => l.PerformerName)
        .Select(g => new {
            Performer = g.Key,
            TotalHours = g.Sum(x => x.Hours),
            TotalAmount = g.Sum(x => x.Amount),
            GradeNames = string.Join(" / ", g.Select(x => x.GradeName).Where(x => !string.IsNullOrEmpty(x)).Distinct())
        })
        .OrderByDescending(x => x.TotalAmount)
        .ToList();
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center flex-wrap gap-2">
                    <h4 class="mb-0 d-flex align-items-center gap-2">
                        <i class="bi bi-receipt"></i>
                        صورتحساب شماره @Model.Id
                    </h4>
                    <div class="d-flex align-items-center gap-2 flex-wrap">
                        <div class="d-flex flex-column gap-2 align-items-end">
                            @if (Model.EmailSentAt.HasValue)
                            {
                                <corp-badge variant="success" icon="bi-check-circle" dense>ایمیل ارسال شده (@Model.EmailSentAt.Value.ToPersianDateTime())</corp-badge>
                            }
                            else
                            {
                                <corp-badge variant="outline" icon="bi-envelope" dense>ایمیل ارسال نشده</corp-badge>
                            }
                            <form asp-action="SendEmail" asp-controller="Invoices" method="post" class="m-0 d-flex align-items-center gap-2 flex-wrap">
                                <input type="hidden" name="id" value="@Model.Id" />
                                <input type="email" name="customerEmail" value="@Model.CustomerEmail" class="form-control form-control-sm" placeholder="ایمیل گیرنده" required />
                                <corp-btn variant="secondary" icon="bi-envelope" dense type="submit">ارسال ایمیل</corp-btn>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="card-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <h6 class="text-muted mb-2">اطلاعات صورتحساب</h6>
                            <div class="d-flex justify-content-between mb-2">
                                <span class="fw-semibold">تاریخ صدور:</span>
                                <span>@Model.InvoiceDate.ToPersianDate()</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span class="fw-semibold">ایمیل گیرنده:</span>
                                <span>@Model.CustomerEmail</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="fw-semibold">مبلغ کل:</span>
                                <corp-badge variant="success" dense icon="bi-currency-exchange">@string.Format("{0:N0} تومان", totalAmount)</corp-badge>
                            </div>
                        </div>
                    </div>

                    <h5 class="mb-3">
                        <i class="bi bi-list-ul me-2"></i>
                        جزئیات محاسبه
                    </h5>
                    <corp-table headers="تسک,انجام‌دهنده,سطح,نرخ نفرساعت (تومان),ساعات,مبلغ (تومان)" hover dense caption="جزئیات محاسبه" striped>
                        @foreach (var l in Model.Lines)
                        {
                            <tr>
                                <td class="fw-semibold">@l.Title</td>
                                <td>@l.PerformerName</td>
                                <td>@l.GradeName</td>
                                <td class="text-end">@string.Format("{0:N0}", l.HourlyRate)</td>
                                <td class="text-end">@l.Hours ساعت</td>
                                <td class="text-end fw-semibold">@string.Format("{0:N0}", l.Amount)</td>
                            </tr>
                        }
                        <tr class="table-light">
                            <td colspan="5" class="text-end fw-bold">مجموع:</td>
                            <td class="text-end fw-bold">@string.Format("{0:N0} تومان", totalAmount)</td>
                        </tr>
                    </corp-table>

                    <h5 class="mt-4 mb-3"><i class="bi bi-people me-2"></i>خلاصه بر اساس انجام‌دهنده</h5>
                    <corp-table headers="انجام‌دهنده,مجموع ساعات,مجموع مبلغ (تومان),سطوح" dense hover striped caption="خلاصه انجام‌دهندگان">
                        @foreach (var g in grouped)
                        {
                            <tr>
                                <td>@(g.Performer ?? "—")</td>
                                <td class="text-end">@g.TotalHours</td>
                                <td class="text-end fw-semibold">@string.Format("{0:N0}", g.TotalAmount)</td>
                                <td class="small">@g.GradeNames</td>
                            </tr>
                        }
                    </corp-table>

                    <h5 class="mt-4 mb-3"><i class="bi bi-credit-card me-2"></i>اطلاعات بانکی انجام‌دهندگان</h5>
                    <div class="row g-3">
                        @foreach (var performer in Model.Lines.Select(l => l.TaskItem?.Performer).Where(p => p != null).Distinct())
                        {
                            <div class="col-md-6">
                                <div class="border rounded p-3 h-100 d-flex flex-column gap-2">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <strong>@performer!.FullName</strong>
                                        <span class="badge bg-light text-dark small">@performer!.Grade?.Name</span>
                                    </div>
                                    <div class="small text-muted">ایمیل: @performer.Email</div>
                                    <div class="small">کارت: <code>@(string.IsNullOrWhiteSpace(performer.CardNumber) ? "—" : performer.CardNumber)</code></div>
                                    <div class="small">شبا: <code>@(string.IsNullOrWhiteSpace(performer.IbanNumber) ? "—" : performer.IbanNumber)</code></div>
                                    <div class="mt-auto small text-muted">ساعات در این فاکتور: @Model.Lines.Where(l => l.PerformerName == performer.FullName).Sum(l => l.Hours)</div>
                                </div>
                            </div>
                        }
                    </div>

                    <h5 class="mt-5 mb-2">
                        <i class="bi bi-clock-history me-2"></i>
                        تاریخچه ارسال ایمیل
                    </h5>
                    <div class="row g-3">
                        <div class="col-md-12">
                            <div class="card border-0 shadow-sm">
                                <div class="card-header bg-light"><strong>ایمیل</strong></div>
                                <div class="card-body">
                                    @if (!emailLogs.Any())
                                    {
                                        <div class="text-muted small">هیچ ایمیلی ارسال نشده است.</div>
                                    }
                                    else
                                    {
                                        <div class="accordion" id="emailLogs">
                                            @for (int i = 0; i < emailLogs.Count; i++)
                                            {
                                                var log = emailLogs[i];
                                                var collapseId = $"collapseEmail{log.Id}";
                                                var headingId = $"headingEmail{log.Id}";
                                                <div class="accordion-item">
                                                    <h2 class="accordion-header" id="@headingId">
                                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@collapseId" aria-expanded="false" aria-controls="@collapseId">
                                                            <div class="d-flex w-100 justify-content-between align-items-center">
                                                                <div>
                                                                    <span class="fw-semibold">@log.SentAt.ToPersianDateTime()</span>
                                                                    <span class="mx-2">|</span>
                                                                    <span class="text-muted">@log.ToEmail</span>
                                                                </div>
                                                                <span class="badge @(log.IsSuccess ? "bg-success" : "bg-danger")">@(log.IsSuccess ? "موفق" : "ناموفق")</span>
                                                            </div>
                                                        </button>
                                                    </h2>
                                                    <div id="@collapseId" class="accordion-collapse collapse" aria-labelledby="@headingId" data-bs-parent="#emailLogs">
                                                        <div class="accordion-body">
                                                            <div class="mb-2"><strong>موضوع:</strong> @log.Subject</div>
                                                            <div class="mb-2">
                                                                <strong>بدنه ایمیل:</strong>
                                                                <div class="p-2 bg-light border rounded" style="max-height: 250px; overflow-y: auto;">
                                                                    @Html.Raw(log.Body)
                                                                </div>
                                                            </div>
                                                            @if (!string.IsNullOrEmpty(log.Error))
                                                            {
                                                                <div class="text-danger small"><strong>خطا:</strong> @log.Error</div>
                                                            }
                                                            @if (log.SentBy != null)
                                                            {
                                                                <div class="text-muted small">ارسال توسط: @log.SentBy.UserName</div>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
